import React from "react";
import styles from "./analytics.module.scss";
import {
  BarChart,
  Bar,
  Cell,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts";
import AnalyticsDataType from "./analytics.type";
import { useRouter } from "next/router";
import { useQuery } from "@apollo/client";
import { GET_ALL_STATES } from "../../graphql/";
// import { State } from "../../generated/graphql";
import Loader from "../../comps/loader";
import Link from "next/link";

interface Props {
  dataAnalytic: AnalyticsDataType[];
}

interface IState {
  name: string;
  id: number;
}
export const ChartComp: React.FC<Props> = (props) => {
  const router = useRouter();

  const { data, loading, error } = useQuery(GET_ALL_STATES);
  const allStates: IState[] = data?.findAllStates;
  if (loading) return <Loader />;
  return (
    <div className={styles.rechart}>
<<<<<<< HEAD
      {data.map((stateInfo, index) => (
        <ResponsiveContainer
          width="100%"
          aspect={window.innerWidth < 600 ? 1.2 : 2}
          key={index}
        >
          <BarChart
            width={500}
            height={300}
            data={[stateInfo]}
            margin={{
              top: 10,
              right: 20,
              left: 20,
              bottom: 5,
            }}
            onClick={() => {
              router.push("states/1/");
            }}
          >
            <CartesianGrid strokeDasharray="1 2" fill="#fff" />
            <XAxis dataKey="state" />
            {/* <Tooltip /> */}
            <Legend />
            {/* <YAxis /> */}
            <Bar dataKey="A" fill="#70F8BF" barSize={50} />
            <Bar dataKey="AA" fill="#FF8901" barSize={50} />
            <Bar dataKey="AAC" fill="#00850B" barSize={50} />
            <Bar dataKey="APC" fill="#B81515" barSize={50} />
            <Bar dataKey="APP" fill="#1C99FF" barSize={50} />
            <Bar dataKey="ADC" fill="#C0CE00" barSize={50} />
            <Bar dataKey="ADP" fill="#6B1DE9" barSize={50} />
            <Bar dataKey="APGA" fill="#63C78D" barSize={50} />
            <Bar dataKey="APM" fill="#0011FF" barSize={50} />
            <Bar dataKey="BP" fill="#FF1CE1" barSize={50} />
            <Bar dataKey="LP" fill="#1C99FF" barSize={50} />
            <Bar dataKey="NNPP" fill="#008892" barSize={50} />
            <Bar dataKey="NRM" fill="#DA00CF" barSize={50} />
            <Bar dataKey="PDP" fill="#FF8901" barSize={50} />
            <Bar dataKey="PRP" fill="#1C99FF" barSize={50} />
            <Bar dataKey="SDP" fill="#96455A" barSize={50} />
            <Bar dataKey="YPP" fill="#F05000" barSize={50} />
            <Bar dataKey="ZLP" fill="#1C99FF" barSize={50} />
          </BarChart>
        </ResponsiveContainer>
      ))}
=======
      {allStates?.map((stateInfo, index) => {
        return (
          <div className={styles.mapWrapper}>
            <Link
              href={{
                pathname: "/analytics/state",
                query: data, // the data
              }}
            >
              <ResponsiveContainer
                width="100%"
                aspect={window.innerWidth < 500 ? 1.2 : 2.6}
                key={index}
              >
                <BarChart
                  width={500}
                  height={300}
                  data={[stateInfo]}
                  margin={{
                    top: 10,
                    right: 20,
                    left: 20,
                    bottom: 5,
                  }}
                  // onClick={() => {
                  //   router.push("states/1/");
                  // }}
                >
                  <CartesianGrid strokeDasharray="1 2" fill="#fff" />
                  <XAxis dataKey="state" />
                  <Tooltip />
                  <Legend />
                  <YAxis />
                  <Bar dataKey="A" fill="#70F8BF" barSize={50} />
                  <Bar dataKey="AA" fill="#FF8901" barSize={50} />
                  <Bar dataKey="AAC" fill="#00850B" barSize={50} />
                  <Bar dataKey="APC" fill="#B81515" barSize={50} />
                  <Bar dataKey="APP" fill="#1C99FF" barSize={50} />
                  <Bar dataKey="ADC" fill="#C0CE00" barSize={50} />
                  <Bar dataKey="ADP" fill="#6B1DE9" barSize={50} />
                  <Bar dataKey="APGA" fill="#63C78D" barSize={50} />
                  <Bar dataKey="APM" fill="#0011FF" barSize={50} />
                  <Bar dataKey="BP" fill="#FF1CE1" barSize={50} />
                  <Bar dataKey="LP" fill="#1C99FF" barSize={50} />
                  <Bar dataKey="NNPP" fill="#008892" barSize={50} />
                  <Bar dataKey="NRM" fill="#DA00CF" barSize={50} />
                  <Bar dataKey="PDP" fill="#FF8901" barSize={50} />
                  <Bar dataKey="PRP" fill="#1C99FF" barSize={50} />
                  <Bar dataKey="SDP" fill="#96455A" barSize={50} />
                  <Bar dataKey="YPP" fill="#F05000" barSize={50} />
                  <Bar dataKey="ZLP" fill="#1C99FF" barSize={50} />
                </BarChart>
              </ResponsiveContainer>
            </Link>
            <h5>{stateInfo.name}</h5>
          </div>
        );
      })}
>>>>>>> analytics
    </div>
  );
};

export default ChartComp;
